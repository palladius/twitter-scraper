<p style="color: green"><%= notice %></p>


<h1>Top 10 Twitter users (TODO optimize)</h1>

<%#= TwitterUser.left_joins(:tweets).group(:id).order('COUNT(tweets.id) DESC').limit(10) %>
<p>
<!-- 
TODO(ricc): optimize this shit :) 

option 1: via Rails 

 TwitterUser.first(100).map{|u| [u.twitter_id, u.tweets.count] }.sort_by{|u| u[1]}.last(10).reverse

 URL
Make your pages load super fast and stop worrying about timeouts. Give each chart its own endpoint.

< % = line_chart completed_tasks_charts_path % >
And in your controller, pass the data as JSON.

class ChartsController < ApplicationController
  def completed_tasks
    render json: Task.group_by_day(:completed_at).count
  end
end
-->
</p>
    <%= #column_chart TwitterUser.all.map{|u| [u.twitter_id, u.tweets.count, u.id, u.name] }.sort_by{|u| u[1]}.last(10).reverse,
        #column_chart  @twitter_users.map{|u| [u.twitter_id, u.tweets.count] }.sort_by{|u| u[1] }.last(10).reverse,
        line_chart TwitterUser.left_joins(:tweets).group(:id).order('COUNT(tweets.id) DESC').limit(15).map{|u| [u.name, u.tweets.count ]},
        # @twitter_users.map{|u| [u.twitter_id, u.tweets.count] }.sort_by{|u| u[1] }.last(10).reverse,
        xtitle: "Twitter User (top 15)" ,
        ytitle: "# Tweets",
        download: true
    %>


<h1>Twitter users</h1>

<div id="twitter_users">
  <% @twitter_users.each do |twitter_user| %>
    <p>
      <%= link_to "#{twitter_user}", twitter_user if twitter_user.tweets.count > 0 %>
    </p>
  <% end %>
</div>

<%= link_to "New twitter user", new_twitter_user_path if mutations_allowed? %>
